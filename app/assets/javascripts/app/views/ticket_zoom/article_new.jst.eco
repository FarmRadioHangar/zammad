<form class="article-add <% if @article.internal: %>is-internal<% else: %>is-public<% end %>" data-type="<%= @article.type %>">
  <input type="hidden" name="type" value="<%= @article.type %>">
  <input type="hidden" name="internal" value="<%= @article.internal %>">
  <input type="hidden" name="form_id" value="<%= @form_id %>">
  <input type="hidden" name="in_reply_to" value="<%= @article.in_reply_to %>">
  <div class="editControls">
    <div class="js-avatar"></div>
    <div class="editControls-item is-hidden pop-select">
      <div class="editControls-iconHolder centered js-selectedArticleType">
        <% for articleType in @articleTypes: %>
        <div class="editControls-icon js-selectableTypes<%- ' hide' if articleType.icon != @article.icon %>" data-type="<%- articleType.name %>">
        <%- @Icon(articleType.icon) %>
        </div>
        <% end %>
      </div>
      <div class="pop-selector is-hidden js-articleTypes">
        <% for articleType in @articleTypes: %>
        <div class="editControls-icon pop-selectable js-articleTypeItem" data-value="<%= articleType.name %>">
          <%- @Icon(articleType.icon, 'pop-selectable-icon') %>
        </div>
        <% end %>
      </div>
    </div>
    <% if @internalSelector: %>
    <div class="editControls-item is-hidden js-toggleVisibility js-selectInternalPublic">
      <div class="editControls-iconHolder">
        <div class="editControls-icon icon-internal" title="<%- @Ti("set to public") %>">
          <%- @Icon('lock') %>
        </div>
        <div class="editControls-icon icon-public" title="<%- @Ti("set to internal") %>">
          <%- @Icon('lock-open') %>
        </div>
      </div>
    </div>
    <% end %>
  </div>
  <div class="article-content bubble-gap">
    <div class="internal-border">

      <div class="input form-group">
        <div class="formGroup-label">
          <label for=""><%- @T('To') %></label>
        </div>
        <div class="controls"><input type="text" name="to" value="<%= @article.to %>" class="form-control js-mail-inputs" required="required"></div>
      </div>
      <div class="input form-group">
        <div class="formGroup-label">
          <label for=""><%- @T('Cc') %></label>
        </div>
        <div class="controls"><input type="text" name="cc" value="<%= @article.cc %>" class="form-control js-mail-inputs"></div>
      </div>
      <div class="input form-group">
        <div class="formGroup-label">
          <label for=""><%- @T('Subject') %></label>
        </div>
        <div class="controls"><input type="text" name="subject" value="<%= @article.subject %>" class="form-control js-mail-inputs2"></div>
      </div>
      <div class="input form-group" id="audio-recorder" style="margin-left: 60px;">
        <input type="hidden" name="audio">
        <button id="start-recording">Start recording</button>
        <button id="stop-recording" class="hide">Stop recording</button>
        <button id="upload" class="hide">Save</button>
        <script>
          const uploadURL = '/<%= @uploadUrl %>';
          const formID = '<%= @form_id %>';
          const player = document.getElementById('player');
          const audioRecorder = document.getElementById('audio-recorder');
          const startRecording = document.getElementById('start-recording');
          const stopRecording = document.getElementById('stop-recording');
          const upload = document.getElementById('upload');
          const attachmentsHolder = document.querySelector('.article-new .attachments');

          let secondCount;

          const handleStream = function(stream) {
            let mimeType = 'audio/ogg;codecs=opus';

            if (MediaRecorder.isTypeSupported('audio/webm;codecs=opus'))
              mimeType = 'audio/webm;codecs=opus';

            const options = {mimeType: mimeType};
            const mediaRecorder = new MediaRecorder(stream, options);

            let chunks = [];
            let blob;

            startRecording.onclick = function() {
              const counter = document.createElement('div');
              counter.innerText = '0';
              chunks = [];

              mediaRecorder.start();
              startRecording.classList.toggle('hide');
              stopRecording.classList.toggle('hide');
              upload.className = 'hide';
              audioRecorder.appendChild(counter);

              if (audioRecorder.querySelector('audio'))
                audioRecorder.querySelector('audio').remove();

              secondsCounter = setInterval(function() {
                let count = parseInt(counter.innerText);
                counter.innerText = `${count+1}`;
              }, 1000);
            };

            stopRecording.onclick = function() {
              mediaRecorder.stop();
              clearInterval(secondsCounter);

              if (audioRecorder.querySelector('div'))
                audioRecorder.querySelector('div').remove();

              setTimeout(function() {
                var audio = document.createElement('audio');
                audio.setAttribute('controls', '');
                audioRecorder.appendChild(audio);

                blob = new Blob(chunks, { 'type': mimeType });
                chunks = [];
                var audioURL = window.URL.createObjectURL(blob);
                audio.src = audioURL;

                startRecording.classList.toggle('hide');
                stopRecording.classList.toggle('hide');
                upload.classList.toggle('hide');
              }, 100);
            };

            upload.onclick = function() {
              const form = new FormData();

              form.append('form_id', formID);
              form.append('File', blob, `${formID}-${blob.size}.webm`);

              App.Ajax.request({
                id:    formID,
                type:  'POST',
                url:   uploadURL,
                data: form,
                processData: false,
                contentType: false,
                success: (data, status, xhr) => {
                  var e = document.createElement('div');
                  e.innerHTML = App.view('generic/attachment_item')(data.data);
                  attachmentsHolder.appendChild(e);

                  upload.classList.toggle('hide');
                  audioRecorder.querySelector('audio').remove();
                },
                error: (xhr, statusText, error) => {
                  console.log(statusText, error)
                }
              })
            };

            mediaRecorder.ondataavailable = function(e) {
              chunks.push(e.data);
            };
          }

          navigator.mediaDevices.getUserMedia({ audio: true, video: false })
            .then(handleStream);
        </script>
      </div>

      <div class="textBubble js-writeArea">
        <div class="bubble-arrow"></div>
        <div class="js-textarea richtext-content articleNewEdit-body" contenteditable="true" data-name="body"><%- @article.body %></div>
        <!-- .textBubble grows with textarea (and expanding clone) -->
        <div class="textBubble-footer js-textSizeLimit">
          <div class="textBubble-signatur"><span class="js-signature"></span></div>
          <div class="textBubble-letterCount js-letterCount"></div>
        </div>
        <div class="attachments"></div>
        <div class="article-attachment">
          <div class="attachmentPlaceholder">
            <span class="attachmentPlaceholder-hint"><%- @T('Enter Answer or') %></span>
            <span class="attachmentPlaceholder-inputHolder">
              <%- @T('select attachment...') %>
              <input multiple="multiple" type="file" name="file" style="position: absolute; right: 0px; top: 0px; font-family: Arial; font-size: 118px; margin: 0px; padding: 0px; cursor: pointer; opacity: 0;">
            </span>
          </div>
          <div class="attachmentUpload hide">
            <div class="horizontal">
              <div class="u-highlight">
                <%- @T('Uploading') %> (<span class="js-percentage">0</span>%) ...
              </div>
              <div class="attachmentUpload-cancel js-cancel">
                <%- @Icon('diagonal-cross') %><%- @T('Cancel Upload') %>
              </div>
            </div>
            <div class="attachmentUpload-progressBar" style="width: 0%"></div>
          </div>
        </div>
        <div class="dropArea">
          <div class="dropArea-inner">
            <%- @T('Drop files here') %>
          </div>
        </div>
      </div>
    </div>
  </div>
</form>
